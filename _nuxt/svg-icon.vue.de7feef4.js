import{i as d,r as m,L as f,M as v,o as r,c as i,t as l,K as o,a as y,J as g}from"./entry.b891b9cd.js";const u={},w="",h="",_="icons";function x(t){return t.toLowerCase().replace(/\.svg$/,"").replace(/[^a-z0-9-:]/g,"-").replace(/:/g,"--")}const p=async t=>{let[e,s]=t.split("/");s||(s=e,e=_);const a=u[e]?await u[e]():"";return{sprite:e,icon:s,url:a+`#${x(s)}`,class:`${w} ${h}${e}`}},B=["viewBox"],C={key:0},S={key:1},N=["href"],z=d({__name:"svg-icon",props:{name:{type:String,required:!0},title:{type:String,default:null},desc:{type:String,default:null},viewBox:{type:String,default:null,validator(t){return t.split(" ").every(e=>!isNaN(parseInt(e)))}}},async setup(t){let e,s;const a=t,n=m({url:"",class:""});return n.value=([e,s]=f(()=>p(a.name)),e=await e,s(),e),v(()=>a.name,async c=>{n.value=await p(c)}),(c,$)=>(r(),i("svg",{viewBox:t.viewBox,class:g(n.value.class)},[t.title?(r(),i("title",C,l(t.title),1)):o("",!0),t.desc?(r(),i("desc",S,l(t.desc),1)):o("",!0),y("use",{href:n.value.url},null,8,N)],10,B))}});export{z as _};
